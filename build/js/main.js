"use strict";

document.addEventListener("DOMContentLoaded", function () {
  // popups
  function setPopups(popups, closeBtns, showBtns) {
    popups = document.querySelectorAll("".concat(popups));
    closeBtns = document.querySelectorAll("".concat(closeBtns));
    showBtns = document.querySelectorAll("".concat(showBtns));
    showBtns.forEach(function (showBtn, showBtnIndex) {
      showBtn.addEventListener("click", function () {
        popups.forEach(function (popup, popupIndex) {
          if (popupIndex === showBtnIndex) {
            popup.classList.toggle("active");
          } else {
            popup.classList.remove("active");
          }
        });
      });
    });
    closeBtns.forEach(function (showBtn, closeBtnIndex) {
      showBtn.addEventListener("click", function () {
        popups.forEach(function (popup, popupIndex) {
          if (popupIndex === closeBtnIndex) {
            popup.classList.remove("active");
          }
        });
      });
    });
  }
  setPopups(".guide__list-popup", ".guide__list-popup-close", ".guide__list-btn");

  // score counter
  var team1 = 0;
  var team2 = 0;
  function setScore(score, scoreContainer, decreaseBtn, increaseBtn) {
    scoreContainer = document.querySelector("".concat(scoreContainer));
    decreaseBtn = document.querySelector("".concat(decreaseBtn));
    increaseBtn = document.querySelector("".concat(increaseBtn));
    scoreContainer.innerText = score;
    increaseBtn.addEventListener("click", function () {
      ++score;
      scoreContainer.innerText = score;
    });
    decreaseBtn.addEventListener("click", function () {
      if (score === 0) return;
      --score;
      scoreContainer.innerText = score;
    });
  }
  setScore(team1, ".predict__score-team1", ".predict__team1-decrease", ".predict__team1-increase");
  setScore(team2, ".predict__score-team2", ".predict__team2-decrease", ".predict__team2-increase");
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwic2V0UG9wdXBzIiwicG9wdXBzIiwiY2xvc2VCdG5zIiwic2hvd0J0bnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInNob3dCdG4iLCJzaG93QnRuSW5kZXgiLCJwb3B1cCIsInBvcHVwSW5kZXgiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJjbG9zZUJ0bkluZGV4IiwidGVhbTEiLCJ0ZWFtMiIsInNldFNjb3JlIiwic2NvcmUiLCJzY29yZUNvbnRhaW5lciIsImRlY3JlYXNlQnRuIiwiaW5jcmVhc2VCdG4iLCJxdWVyeVNlbGVjdG9yIiwiaW5uZXJUZXh0Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLFlBQUs7RUFDL0M7RUFDQSxTQUFTQyxTQUFTLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUM7SUFDM0NGLE1BQU0sR0FBR0gsUUFBUSxDQUFDTSxnQkFBZ0IsV0FBSUgsTUFBTSxFQUFHO0lBQy9DQyxTQUFTLEdBQUdKLFFBQVEsQ0FBQ00sZ0JBQWdCLFdBQUlGLFNBQVMsRUFBRztJQUNyREMsUUFBUSxHQUFHTCxRQUFRLENBQUNNLGdCQUFnQixXQUFJRCxRQUFRLEVBQUc7SUFFbkRBLFFBQVEsQ0FBQ0UsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsWUFBWSxFQUFLO01BQ3hDRCxPQUFPLENBQUNQLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFLO1FBQ25DRSxNQUFNLENBQUNJLE9BQU8sQ0FBQyxVQUFDRyxLQUFLLEVBQUVDLFVBQVUsRUFBSTtVQUNqQyxJQUFHQSxVQUFVLEtBQUtGLFlBQVksRUFBQztZQUMzQkMsS0FBSyxDQUFDRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxRQUFRLENBQUM7VUFDcEMsQ0FBQyxNQUFJO1lBQ0RILEtBQUssQ0FBQ0UsU0FBUyxDQUFDRSxNQUFNLENBQUMsUUFBUSxDQUFDO1VBQ3BDO1FBQ0osQ0FBQyxDQUFDO01BQ04sQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0lBQ0ZWLFNBQVMsQ0FBQ0csT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRU8sYUFBYSxFQUFLO01BQzFDUCxPQUFPLENBQUNQLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFLO1FBQ25DRSxNQUFNLENBQUNJLE9BQU8sQ0FBQyxVQUFDRyxLQUFLLEVBQUVDLFVBQVUsRUFBSTtVQUNqQyxJQUFHQSxVQUFVLEtBQUtJLGFBQWEsRUFBQztZQUM1QkwsS0FBSyxDQUFDRSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxRQUFRLENBQUM7VUFDcEM7UUFDSixDQUFDLENBQUM7TUFDTixDQUFDLENBQUM7SUFDTixDQUFDLENBQUM7RUFFTjtFQUVBWixTQUFTLENBQUMsb0JBQW9CLEVBQUUsMEJBQTBCLEVBQUUsa0JBQWtCLENBQUM7O0VBRS9FO0VBQ0EsSUFBSWMsS0FBSyxHQUFHLENBQUM7RUFDYixJQUFJQyxLQUFLLEdBQUcsQ0FBQztFQUViLFNBQVNDLFFBQVEsQ0FBQ0MsS0FBSyxFQUFFQyxjQUFjLEVBQUVDLFdBQVcsRUFBRUMsV0FBVyxFQUFDO0lBQzlERixjQUFjLEdBQUdwQixRQUFRLENBQUN1QixhQUFhLFdBQUlILGNBQWMsRUFBRztJQUM1REMsV0FBVyxHQUFHckIsUUFBUSxDQUFDdUIsYUFBYSxXQUFJRixXQUFXLEVBQUc7SUFDdERDLFdBQVcsR0FBR3RCLFFBQVEsQ0FBQ3VCLGFBQWEsV0FBSUQsV0FBVyxFQUFHO0lBRXRERixjQUFjLENBQUNJLFNBQVMsR0FBR0wsS0FBSztJQUNoQ0csV0FBVyxDQUFDckIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQUs7TUFDdkMsRUFBRWtCLEtBQUs7TUFDUEMsY0FBYyxDQUFDSSxTQUFTLEdBQUdMLEtBQUs7SUFDcEMsQ0FBQyxDQUFDO0lBQ0ZFLFdBQVcsQ0FBQ3BCLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFLO01BQ3ZDLElBQUdrQixLQUFLLEtBQUssQ0FBQyxFQUFFO01BQ2hCLEVBQUVBLEtBQUs7TUFDUEMsY0FBYyxDQUFDSSxTQUFTLEdBQUdMLEtBQUs7SUFDcEMsQ0FBQyxDQUFDO0VBQ047RUFFQUQsUUFBUSxDQUFDRixLQUFLLEVBQUUsdUJBQXVCLEVBQUUsMEJBQTBCLEVBQUUsMEJBQTBCLENBQUM7RUFDaEdFLFFBQVEsQ0FBQ0QsS0FBSyxFQUFFLHVCQUF1QixFQUFFLDBCQUEwQixFQUFFLDBCQUEwQixDQUFDO0FBQ3BHLENBQUMsQ0FBQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT57XG4gICAgLy8gcG9wdXBzXG4gICAgZnVuY3Rpb24gc2V0UG9wdXBzKHBvcHVwcywgY2xvc2VCdG5zLCBzaG93QnRucyl7XG4gICAgICAgIHBvcHVwcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCR7cG9wdXBzfWApXG4gICAgICAgIGNsb3NlQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCR7Y2xvc2VCdG5zfWApXG4gICAgICAgIHNob3dCdG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgJHtzaG93QnRuc31gKVxuXG4gICAgICAgIHNob3dCdG5zLmZvckVhY2goKHNob3dCdG4sIHNob3dCdG5JbmRleCkgPT4ge1xuICAgICAgICAgICAgc2hvd0J0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT57XG4gICAgICAgICAgICAgICAgcG9wdXBzLmZvckVhY2goKHBvcHVwLCBwb3B1cEluZGV4KSA9PntcbiAgICAgICAgICAgICAgICAgICAgaWYocG9wdXBJbmRleCA9PT0gc2hvd0J0bkluZGV4KXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIilcbiAgICAgICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgICAgY2xvc2VCdG5zLmZvckVhY2goKHNob3dCdG4sIGNsb3NlQnRuSW5kZXgpID0+IHtcbiAgICAgICAgICAgIHNob3dCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+e1xuICAgICAgICAgICAgICAgIHBvcHVwcy5mb3JFYWNoKChwb3B1cCwgcG9wdXBJbmRleCkgPT57XG4gICAgICAgICAgICAgICAgICAgIGlmKHBvcHVwSW5kZXggPT09IGNsb3NlQnRuSW5kZXgpe1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG5cbiAgICB9XG5cbiAgICBzZXRQb3B1cHMoXCIuZ3VpZGVfX2xpc3QtcG9wdXBcIiwgXCIuZ3VpZGVfX2xpc3QtcG9wdXAtY2xvc2VcIiwgXCIuZ3VpZGVfX2xpc3QtYnRuXCIpXG5cbiAgICAvLyBzY29yZSBjb3VudGVyXG4gICAgbGV0IHRlYW0xID0gMDtcbiAgICBsZXQgdGVhbTIgPSAwO1xuXG4gICAgZnVuY3Rpb24gc2V0U2NvcmUoc2NvcmUsIHNjb3JlQ29udGFpbmVyLCBkZWNyZWFzZUJ0biwgaW5jcmVhc2VCdG4pe1xuICAgICAgICBzY29yZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCR7c2NvcmVDb250YWluZXJ9YClcbiAgICAgICAgZGVjcmVhc2VCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAke2RlY3JlYXNlQnRufWApXG4gICAgICAgIGluY3JlYXNlQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgJHtpbmNyZWFzZUJ0bn1gKVxuXG4gICAgICAgIHNjb3JlQ29udGFpbmVyLmlubmVyVGV4dCA9IHNjb3JlXG4gICAgICAgIGluY3JlYXNlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PntcbiAgICAgICAgICAgICsrc2NvcmVcbiAgICAgICAgICAgIHNjb3JlQ29udGFpbmVyLmlubmVyVGV4dCA9IHNjb3JlXG4gICAgICAgIH0pXG4gICAgICAgIGRlY3JlYXNlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PntcbiAgICAgICAgICAgIGlmKHNjb3JlID09PSAwKSByZXR1cm5cbiAgICAgICAgICAgIC0tc2NvcmVcbiAgICAgICAgICAgIHNjb3JlQ29udGFpbmVyLmlubmVyVGV4dCA9IHNjb3JlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc2V0U2NvcmUodGVhbTEsIFwiLnByZWRpY3RfX3Njb3JlLXRlYW0xXCIsIFwiLnByZWRpY3RfX3RlYW0xLWRlY3JlYXNlXCIsIFwiLnByZWRpY3RfX3RlYW0xLWluY3JlYXNlXCIpXG4gICAgc2V0U2NvcmUodGVhbTIsIFwiLnByZWRpY3RfX3Njb3JlLXRlYW0yXCIsIFwiLnByZWRpY3RfX3RlYW0yLWRlY3JlYXNlXCIsIFwiLnByZWRpY3RfX3RlYW0yLWluY3JlYXNlXCIpXG59KSJdfQ==
